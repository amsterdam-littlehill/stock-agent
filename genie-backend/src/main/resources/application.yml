# Stock Agent Application Configuration
spring:
  application:
    name: stock-agent
  
  # 数据库配置
  datasource:
    url: jdbc:mysql://localhost:3306/stock_agent_db?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    # MySQL安装路径: E:\mysql\mysql-8.0.15-winx64
    # 请确保MySQL服务已启动，端口为3306
    username: root
    password: root123
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        generate_statistics: false
  
  # Redis配置
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      database: 0
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2000ms
  
  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: 600000  # 10分钟
      cache-null-values: false
  
  # Jackson配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
  
  # 定时任务配置
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: embedded
    properties:
      org:
        quartz:
          scheduler:
            instanceName: StockAgentScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5

# 股票数据配置
stock:
  data:
    # 新浪财经配置
    sina:
      base-url: https://hq.sinajs.cn
      enabled: true
      timeout: 5000
      retry-count: 3
    
    # 腾讯财经配置
    tencent:
      base-url: https://qt.gtimg.cn
      enabled: true
      timeout: 5000
      retry-count: 3
    
    # Tushare配置
    tushare:
      base-url: https://api.tushare.pro
      token: ${TUSHARE_TOKEN:}
      enabled: false  # 需要token才能启用
      timeout: 10000
      retry-count: 3
      points-per-minute: 200
    
    # 东方财富配置
    eastmoney:
      base-url: https://push2.eastmoney.com
      enabled: true
      timeout: 5000
      retry-count: 3
    
    # 数据更新配置
    update:
      real-time-interval: 3      # 实时数据更新间隔（秒）
      historical-interval: 60    # 历史数据更新间隔（分钟）
      news-interval: 10          # 新闻数据更新间隔（分钟）
      market-open-hour: 9        # 市场开盘时间
      market-close-hour: 15      # 市场收盘时间
      only-update-in-trading-hours: true  # 是否只在交易时间更新

# InfluxDB时序数据库配置
influxdb:
  url: http://localhost:8086
  token: ${INFLUXDB_TOKEN:}
  org: stock-agent
  bucket: stock-data
  enabled: true
  connect-timeout: 10000
  read-timeout: 30000
  write-timeout: 10000
  
  # 批量写入配置
  batch:
    batch-size: 1000
    flush-interval: 1000
    retry-interval: 5000
    max-retries: 3
    buffer-limit: 10000
  
  # 数据保留策略
  retention:
    realtime-retention-days: 7
    minute-retention-days: 30
    hour-retention-days: 365
    daily-retention-days: 3650
    auto-cleanup: true
    cleanup-cron: "0 0 2 * * ?"

# 智能体协作配置
collaboration:
  # 协作引擎配置
  engine:
    enabled: true
    version: "1.0"
    max-concurrent-sessions: 50
    max-agents-per-session: 10
    session-timeout-ms: 300000  # 5分钟
    enable-metrics: true
    enable-cache: true
    cache-max-size: 1000
    cache-ttl-ms: 3600000  # 1小时
  
  # 智能体配置
  agent:
    max-registered-agents: 100
    health-check-interval-ms: 300000  # 5分钟
    min-confidence-threshold: 0.5
    max-experience-level: 10
    response-timeout-ms: 30000  # 30秒
    enable-auto-recovery: true
    max-retry-attempts: 3
  
  # 会话配置
  session:
    max-history-size: 1000
    cleanup-interval-ms: 3600000  # 1小时
    max-session-duration-ms: 1800000  # 30分钟
    enable-session-persistence: true
    enable-interaction-logging: true
    max-interactions-per-session: 1000
    
    # 协作模式配置
    debate:
      max-rounds: 5
      min-participants: 2
      max-participants: 8
      consensus-threshold: 0.8
      round-timeout-ms: 60000  # 1分钟
    
    analysis:
      max-parallel-tasks: 10
      analysis-timeout-ms: 120000  # 2分钟
      enable-result-aggregation: true
      min-valid-result-ratio: 0.6
    
    pipeline:
      max-steps: 10
      step-timeout-ms: 90000  # 1.5分钟
      enable-step-validation: true
      allow-step-skipping: false
    
    consensus:
      max-iterations: 5
      target-consensus: 0.8
      min-consensus-improvement: 0.1
      iteration-timeout-ms: 120000  # 2分钟
  
  # 调度配置
  schedule:
    enable-auto-collaboration: true
    enable-market-analysis: true
    enable-risk-assessment: true
    enable-strategy-optimization: true
    enable-system-maintenance: true
    
    # 调度间隔配置
    health-check-interval-ms: 300000  # 5分钟
    market-analysis-interval-ms: 1800000  # 30分钟
    risk-assessment-interval-ms: 3600000  # 1小时
    strategy-optimization-cron: "0 0 9 * * MON-FRI"  # 工作日上午9点
    system-maintenance-cron: "0 0 2 * * *"  # 每天凌晨2点
  
  # 性能配置
  performance:
    # 主线程池配置
    core-pool-size: 10
    max-pool-size: 50
    queue-capacity: 200
    keep-alive-seconds: 60
    
    # 分析线程池配置
    analysis-core-pool-size: 5
    analysis-max-pool-size: 20
    analysis-queue-capacity: 100
    
    # 内存配置
    max-memory-usage-mb: 512
    enable-memory-monitoring: true
    
    # 性能监控
    enable-performance-metrics: true
    metrics-collection-interval-ms: 60000  # 1分钟

# 服务器配置
server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# 日志配置
logging:
  level:
    root: INFO
    com.jd.genie: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/stock-agent.log
    max-size: 100MB
    max-history: 30

# 自定义配置
stock-agent:
  # 股票数据源配置
  data-sources:
    sina:
      enabled: true
      base-url: "http://hq.sinajs.cn"
      timeout: 5000
    tencent:
      enabled: true
      base-url: "http://qt.gtimg.cn"
      timeout: 5000
    tushare:
      enabled: false
      base-url: "http://api.tushare.pro"
      token: ""
      timeout: 10000
  
  # AI配置
  ai:
    openai:
      enabled: true
      api-key: ""
      base-url: "https://api.openai.com/v1"
      model: "gpt-3.5-turbo"
      max-tokens: 2000
      temperature: 0.7
      timeout: 30000
    ollama:
      enabled: false
      base-url: "http://localhost:11434"
      model: "llama2"
      timeout: 60000
    lmstudio:
      enabled: false
      base-url: "http://localhost:1234/v1"
      model: "local-model"
      timeout: 60000
  
  # 智能体配置
  agents:
    technical-analyst:
      enabled: true
      max-concurrent: 5
      timeout: 30000
    fundamental-analyst:
      enabled: true
      max-concurrent: 3
      timeout: 45000
    sentiment-analyst:
      enabled: true
      max-concurrent: 3
      timeout: 20000
    risk-analyst:
      enabled: true
      max-concurrent: 2
      timeout: 25000
    market-analyst:
      enabled: true
      max-concurrent: 3
      timeout: 20000
    advisor:
      enabled: true
      max-concurrent: 2
      timeout: 35000
  
  # 智能体协调器配置
  orchestrator:
    # 超时配置（毫秒）
    timeout:
      overall-task: 120000
      individual-agent: 60000
    
    # 重试配置
    retry:
      max-attempts: 3
      delay: 1000
      multiplier: 2.0
    
    # 线程池配置
    executor:
      core-pool-size: 10
      max-pool-size: 50
      queue-capacity: 200
      keep-alive-seconds: 60
      thread-name-prefix: "agent-executor-"
  
  # 工作流配置
  workflow:
    # 执行配置
    execution:
      default-timeout: 300
      max-concurrent-executions: 100
      cleanup-interval: 3600
      history-retention-days: 30
    
    # 节点执行器配置
    node-executors:
      script:
        timeout: 60
        max-memory: 128MB
        allowed-languages: ["javascript", "groovy", "python"]
      tool:
        timeout: 30
        max-retries: 3
      agent:
        timeout: 60
        max-retries: 2
      condition:
        timeout: 10
      delay:
        max-delay: 3600
      notification:
        timeout: 15
    
    # 工作流引擎配置
    engine:
      core-pool-size: 5
      max-pool-size: 20
      queue-capacity: 100
      keep-alive-seconds: 60
      thread-name-prefix: "workflow-engine-"
  
  # MCP工具配置
  mcp:
    # 工具超时配置
    timeout:
      default: 30000
      data-analysis: 60000
      market-data: 15000
      technical-analysis: 45000
      risk-management: 30000
      report-generation: 90000
      notification: 10000
    
    # 工具重试配置
    retry:
      max-attempts: 3
      delay: 1000
      multiplier: 2.0
    
    # 健康检查配置
    health-check:
      interval: 60
      timeout: 10
      enabled: true
    
    # 工具分类配置
    categories:
      data-analysis:
        enabled: true
        max-concurrent: 10
      market-data:
        enabled: true
        max-concurrent: 20
      technical-analysis:
        enabled: true
        max-concurrent: 15
      risk-management:
        enabled: true
        max-concurrent: 5
      report-generation:
        enabled: true
        max-concurrent: 3
      notification:
        enabled: true
        max-concurrent: 10
  
  # 缓存配置
  cache:
    stock-data:
      ttl: 300  # 5分钟
    analysis-result:
      ttl: 1800  # 30分钟
    market-news:
      ttl: 600   # 10分钟
  
  # 限流配置
  rate-limit:
    enabled: true
    requests-per-minute: 100
    burst-capacity: 200
  
  # WebSocket配置
  websocket:
    enabled: true
    heartbeat-interval: 30000  # 30秒
    max-sessions: 1000
    # 分析WebSocket配置
    analysis:
      endpoint: "/ws/analysis"
      max-connections: 500
      message-size-limit: 1048576  # 1MB
    # 工作流WebSocket配置
    workflow:
      endpoint: "/ws/workflow"
      max-connections: 300
      message-size-limit: 1048576  # 1MB
      progress-update-interval: 1000  # 1秒
  
  # 任务调度配置
  scheduler:
    enabled: true
    thread-pool-size: 10
    market-data-refresh-cron: "0 */5 * * * ?"  # 每5分钟
    analysis-cleanup-cron: "0 0 2 * * ?"      # 每天凌晨2点

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:mysql://localhost:3306/stock_agent_dev?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

logging:
  level:
    com.jd.genie: DEBUG
    org.hibernate.SQL: DEBUG

---
# 测试环境配置
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  
  h2:
    console:
      enabled: true

---
# 生产环境配置
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

logging:
  level:
    root: WARN
    com.jd.genie: INFO
    org.hibernate.SQL: WARN

stock-agent:
  rate-limit:
    requests-per-minute: 1000
    burst-capacity: 2000
